#shader vertex
#version 450

layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aColor;
layout (location = 2) in vec2 aTexCoord;

layout (location = 0) out vec3 fragColor;
layout (location = 1) out vec2 fragTexCoord;
 
// Global Frame data
layout (set = 0, binding = 0) uniform Camera {
	mat4 proj;
	mat4 view;
	vec3 cameraPosition;
} camera;

// Per object data
layout (set = 3, binding = 0) uniform Model {
	mat4 transform;
} model;

void main() {
	gl_Position = camera.proj * camera.view * model.transform * vec4(aPos, 1.0);
	fragColor = aColor;
	fragTexCoord = aTexCoord;
}

#shader fragment
#version 450

layout(location = 0) in vec3 fragColor;
layout(location = 1) in vec2 fragTexCoord;

layout(location = 0) out vec4 Color;

layout (set = 2, binding = 0) uniform sampler2D sprite;

void main() {
	// Final Color
	Color = vec4(fragColor, 1.0);
}

